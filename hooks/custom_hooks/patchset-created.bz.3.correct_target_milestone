#!/bin/bash
## @file
## Checks that the patch has Bug-Url in the git commit message, breaks the
## chain if not. Config Options:
##   - BRANCHES - List of relevant branches, only those branches listed here will
##              be tested as a bash array: BRANCHES=('rhev-3.2' 'rhev-3.1')
##   - BZ_USER - Bz username to use when logging in
##   - BZ_PASS - Bz password to use when logging in
##   - PRODUCTS - Array with the products allowed
##   - STABLE_BRANCHES - String with the space separated list of stable branches
##       to do the extra checks
##   - CHECK_TARGET_MILESTONE - Pairs of 'branch|regexp' to match agains the bug
##       target milestone, if regexp starts with '!' it will be negated
##   - CONTACT - email/s for the contact, if not specified, will use
##       infra at ovirt dot org

source bz.sh
source tools.sh
source gerrit.sh
source conf.sh

###############################################################################
## MAIN
## Parse the parameters
gerrit.parse_params "$@"

## Parse the configuration
conf.load

message=""
result="0"
hdr="Check TM"
## Check if we have to manage that branch
if [[ -n $BRANCHES ]] && ! vindex=$(tools.is_in "$branch" "${BRANCHES[@]}"); then
    tools.review "" "" "* $hdr::SKIP, not in a monitored branch (${BRANCHES[*]})"
    bz.clean
    exit 2
fi
### Try to login, fail if there are errors
bz.login "$BZ_USER" "$BZ_PASS" \
|| {
    message+="${message:+\n}* $hdr::ERROR, There was an error logging into bugzilla, "
    message+="please contact the administrator ${CONTACT:-dcaroest@redhat.com}"
    tools.review "" "" "$message"
    bz.clean
    exit 2
}
## Check if there are any Bug-Urls
bug_ids=($(bz.get_bug_id $commit))
### Start checking bugs
failed=false
tools.log "Got bug ids ${bug_ids[@]}"
for bug_id in ${bug_ids[@]}; do
    hdr="Check TM::#$bug_id"
    ## If we are in the stable branch and the target milestone is not correct,
    ## fail
    if tools.is_in "$branch" ${STABLE_BRANCHES[@]} >/dev/null; then
        res="$(bz.check_target_milestone \
            "$bug_id" \
            "$branch" \
            "${CHECK_TARGET_MILESTONE[@]}")"
        if [[ $? -ne 0 ]]; then
            message+="${message:+\n}* $hdr::ERROR, wrong target "
            message+="milestone for stable branch, $res"
            failed=true
            continue
        else
            message+="${message:+\n}* $hdr::OK, correct target "
            message+="milestone $res"
        fi
    else
        tools.log "$hdr::INFO: Current branch $branch not in any of the " \
                  "stable branches: ${STABLE_BRANCHES[@]}"
        message+="* $hdr::SKIPPED, not in a stable branch."
        break
    fi
done
if $failed; then
    bz.clean
    tools.log "$message"
    tools.review "-1" "" "$message"
    bz.clean
    exit 2
fi
tools.review "" "" "$message"
