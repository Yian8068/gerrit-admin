#!/bin/bash
## @file
## Checks that the patch has Bug-Url in the git commit message, breaks the
## chain if not. Config Options:
##   - BRANCHES - List of relevant branches, only those branches listed here will
##              be tested as a bash array: BRANCHES=('rhev-3.2' 'rhev-3.1')
##   - BZ_USER - Bz username to use when logging in
##   - BZ_PASS - Bz password to use when logging in
##   - PRODUCTS - Array with the products allowed
##   - STABLE_BRANCHES - String with the space separated list of stable branches
##       to do the extra checks
##   - CHECK_TARGET_RELEASE - Pairs of 'branch|regexp' to match agains the bug
##       target release, if regexp starts with '!' it will be negated
##   - CONTACT - email/s for the contact, if not specified, will use
##       infra at ovirt dot org

source bz.sh
source tools.sh
source gerrit.sh
source conf.sh

###############################################################################
## MAIN
## Parse the parameters
gerrit.parse_params "$@"

## Parse the configuration
conf.load

message=""
result="0"
hdr="Check Public Bug"
### Try to login, fail if there are errors
bz.login "$BZ_USER" "$BZ_PASS" \
|| {
    message+="${message:+\n}* Bug-Url: ERROR, There was an error logging into bugzilla, "
    message+="please contact the administrator ${CONTACT:-infra@ovirt.org}"
    tools.review "" "" "$message"
    bz.clean
    exit 2
}
bug_ids=($(bz.get_bug_id $commit))
### Start checking bugs
failed=false
got_1_public_bug=false
tools.log "Got bug ids ${bug_ids[@]}"
for bug_id in ${bug_ids[@]}; do
    ## If it's private, fail
    if [[ -z "$SKIP_PRIVATE" ]] && bz.is_private "$bug_id"; then
        tools.log "$bug_id::ERROR bug is private."
        message+="${message:+\n}* $hdr::#$bug_id::ERROR, private bug"
        failed=true
        continue
    else
        message+="${message:+\n}* $hdr::#$bug_id::OK, public bug"
        got_1_public_bug=true
    fi
done
if ! $got_1_public_bug; then
    ## if we are not, just warn
    message+="${message:+\n}"
    message+="* $hdr::WARN, no public bug url found"
    tools.review "" "" "$message"
    bz.clean
    exit 2
fi

if $failed; then
    bz.clean
    tools.log "$message"
    tools.review "-1" "" "$message"
    bz.clean
    exit 2
fi
tools.review "" "" "$message"
